{"version":3,"sources":["components/firebaseConfig.js","components/LoginScreen.js","components/AdminDashboard.js","components/ApoderadoDashboard.js","components/EstudianteDashboard.js","App.js","reportWebVitals.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","getAuth","getStorage","console","log","LoginScreen","_ref","onLogin","formData","setFormData","useState","email","password","profile","registerMode","setRegisterMode","confirmPassword","setConfirmPassword","errors","setErrors","loading","setLoading","handleChange","e","name","value","target","_objectSpread","[object Object]","React","createElement","className","onSubmit","async","preventDefault","validate","newErrors","test","length","Object","keys","userRef","collection","addDoc","createdAt","Date","alert","q","query","where","querySnapshot","getDocs","empty","user","docs","data","trim","toLowerCase","error","htmlFor","type","id","onChange","disabled","onClick","AdminDashboard","onLogout","nombre","edad","curso","estadoMatricula","searchQuery","setSearchQuery","filteredStudents","setFilteredStudents","handleSearchChange","studentsRef","parseInt","message","required","filters","push","students","map","doc","student","key","ApoderadoDashboard","apoderado","onNavigateBack","telefono","direccion","estudiantes","estudiante","EstudianteDashboard","onNavigateToApoderado","onNavigateToMatricula","App","userRole","setUserRole","isLoggedIn","setIsLoggedIn","currentView","setCurrentView","estudianteData","apoderadoData","handleLogout","Fragment","handleNavigateToApoderado","handleNavigateToMatricula","role","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.1368aaa5.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { getAuth } from \"firebase/auth\";\nimport { getStorage } from \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyA4ILMwYM6kWQYqzj2swfcGfXzDpu6rTgw\",\n  authDomain: \"peliculas-8ed9a.firebaseapp.com\",\n  projectId: \"peliculas-8ed9a\",\n  storageBucket: \"peliculas-8ed9a.firebasestorage.app\",\n  messagingSenderId: \"933272402210\",\n  appId: \"1:933272402210:web:1751cf1de4b38dce9e0d7b\",\n  measurementId: \"G-F3F6RS788C\"\n};\n\nconst app = initializeApp(firebaseConfig);\n\nexport const db = getFirestore(app);\nexport const auth = getAuth(app);\nexport const storage = getStorage(app);\n\n\nconsole.log(\"Firestore conectado correctamente.\");\n","import React, { useState } from \"react\";\nimport { collection, query, where, getDocs } from \"firebase/firestore\";\nimport { db } from \"../components/firebaseConfig\";\nimport \"./LoginScreen.css\";\nimport { addDoc } from \"firebase/firestore\";\n\nconst LoginScreen = ({ onLogin }) => {\n    const [formData, setFormData] = useState({ email: \"\", password: \"\", profile: \"\" });\n    const [registerMode, setRegisterMode] = useState(false);\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n    const [errors, setErrors] = useState({});\n    const [loading, setLoading] = useState(false);\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormData({ ...formData, [name]: value });\n    };\n\n    const validate = () => {\n        const newErrors = {};\n        if (!formData.email) {\n            newErrors.email = \"El correo es obligatorio.\";\n        } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n            newErrors.email = \"Ingrese un correo válido.\";\n        }\n\n        if (!registerMode && !formData.password) {\n            newErrors.password = \"La contraseña es obligatoria.\";\n        }\n\n        if (!formData.profile) {\n            newErrors.profile = \"Debe seleccionar un perfil.\";\n        }\n\n        if (registerMode) {\n            if (formData.password.length < 8) {\n                newErrors.password = \"La contraseña debe tener al menos 8 caracteres.\";\n            }\n            if (formData.password !== confirmPassword) {\n                newErrors.confirmPassword = \"Las contraseñas no coinciden.\";\n            }\n        }\n\n        setErrors(newErrors);\n        return Object.keys(newErrors).length === 0;\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        if (!validate()) return;\n\n        setLoading(true);\n        try {\n            if (registerMode) {\n                // Registro de usuario\n                const userRef = collection(db, \"users\");\n                await addDoc(userRef, {\n                    email: formData.email,\n                    password: formData.password, // Almacena la contraseña para fines de demostración\n                    profile: formData.profile,\n                    createdAt: new Date(),\n                });\n                alert(\"Usuario registrado correctamente.\");\n                setRegisterMode(false); // Cambiar al modo de inicio de sesión\n            } else {\n                // Inicio de sesión\n                const userRef = collection(db, \"users\");\n                const q = query(userRef, where(\"email\", \"==\", formData.email));\n                const querySnapshot = await getDocs(q);\n\n                if (querySnapshot.empty) {\n                    setErrors({ email: \"El correo no está registrado.\" });\n                    setLoading(false);\n                    return;\n                }\n\n                const user = querySnapshot.docs[0].data();\n                if (user.password !== formData.password) {\n                    setErrors({ password: \"La contraseña es incorrecta.\" });\n                    setLoading(false);\n                    return;\n                }\n\n                if (user.profile.trim().toLowerCase() !== formData.profile.trim().toLowerCase()) {\n                    setErrors({ profile: \"El perfil seleccionado no coincide con el usuario.\" });\n                    setLoading(false);\n                    return;\n                }\n\n                onLogin(user.profile); // Pasa el perfil del usuario al componente principal\n            }\n        } catch (error) {\n            console.error(\"Error durante el inicio de sesión:\", error);\n            alert(\"Ocurrió un error. Intente nuevamente.\");\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    return (\n        <div className=\"login-container\">\n            <div className=\"login-card\">\n                <h2 className=\"login-title\">{registerMode ? \"Registrarse\" : \"Inicio de Sesión\"}</h2>\n                <form onSubmit={handleSubmit}>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"email\">Correo Electrónico:</label>\n                        <input\n                            type=\"email\"\n                            id=\"email\"\n                            name=\"email\"\n                            value={formData.email}\n                            onChange={handleChange}\n                        />\n                        {errors.email && <p className=\"error-text\">{errors.email}</p>}\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"password\">Contraseña:</label>\n                        <input\n                            type=\"password\"\n                            id=\"password\"\n                            name=\"password\"\n                            value={formData.password}\n                            onChange={handleChange}\n                        />\n                        {errors.password && <p className=\"error-text\">{errors.password}</p>}\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"profile\">Seleccionar Perfil:</label>\n                        <select\n                            id=\"profile\"\n                            name=\"profile\"\n                            value={formData.profile}\n                            onChange={handleChange}\n                        >\n                            <option value=\"\">Seleccione un perfil</option>\n                            <option value=\"Administrador\">Administrador</option>\n                            <option value=\"Apoderado\">Apoderado</option>\n                            <option value=\"Estudiante\">Estudiante</option>\n                        </select>\n                        {errors.profile && <p className=\"error-text\">{errors.profile}</p>}\n                    </div>\n                    {registerMode && (\n                        <div className=\"form-group\">\n                            <label htmlFor=\"confirmPassword\">Confirmar Contraseña:</label>\n                            <input\n                                type=\"password\"\n                                id=\"confirmPassword\"\n                                name=\"confirmPassword\"\n                                value={confirmPassword}\n                                onChange={(e) => setConfirmPassword(e.target.value)}\n                            />\n                            {errors.confirmPassword && <p className=\"error-text\">{errors.confirmPassword}</p>}\n                        </div>\n                    )}\n                    <button\n                        type=\"submit\"\n                        className=\"login-button\"\n                        disabled={loading}\n                    >\n                        {loading ? \"Cargando...\" : registerMode ? \"Registrarse\" : \"Iniciar Sesión\"}\n                    </button>\n                </form>\n                <div className=\"toggle-link\">\n                    {registerMode ? (\n                        <p>\n                            ¿Ya tienes una cuenta?{\" \"}\n                            <span onClick={() => setRegisterMode(false)}>Inicia sesión aquí.</span>\n                        </p>\n                    ) : (\n                        <p>\n                            ¿No tienes una cuenta?{\" \"}\n                            <span onClick={() => setRegisterMode(true)}>Regístrate aquí.</span>\n                        </p>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default LoginScreen;","import React, { useState } from \"react\";\nimport { collection, query, where, getDocs, addDoc } from \"firebase/firestore\";\nimport { db } from \"./firebaseConfig\";\nimport \"./AdminDashboard.css\";\n\nconst AdminDashboard = ({ onLogout }) => {\n    const [formData, setFormData] = useState({\n        nombre: \"\",\n        edad: \"\",\n        curso: \"\",\n        estadoMatricula: \"Activa\", // Valor predeterminado\n    });\n\n    const [searchQuery, setSearchQuery] = useState({\n        nombre: \"\",\n        edad: \"\",\n        curso: \"\",\n        estadoMatricula: \"\",\n    });\n\n    const [filteredStudents, setFilteredStudents] = useState([]);\n    const [errors, setErrors] = useState({});\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormData({ ...formData, [name]: value });\n    };\n\n    const handleSearchChange = (e) => {\n        const { name, value } = e.target;\n        setSearchQuery({ ...searchQuery, [name]: value });\n    };\n\n    // Función para agregar un estudiante a Firestore\n    const handleAddStudent = async (e) => {\n        e.preventDefault();\n        if (!formData.nombre || !formData.edad || !formData.curso || !formData.estadoMatricula) {\n            setErrors({ message: \"Todos los campos son obligatorios para agregar un estudiante.\" });\n            return;\n        }\n\n        try {\n            const studentsRef = collection(db, \"estudiantes\");\n            await addDoc(studentsRef, {\n                nombre: formData.nombre,\n                edad: parseInt(formData.edad),\n                curso: formData.curso,\n                estadoMatricula: formData.estadoMatricula,\n            });\n            alert(\"Estudiante agregado exitosamente.\");\n            setFormData({ nombre: \"\", edad: \"\", curso: \"\", estadoMatricula: \"Activa\" });\n        } catch (error) {\n            console.error(\"Error al agregar estudiante:\", error);\n            alert(\"Hubo un error al agregar el estudiante. Intente nuevamente.\");\n        }\n    };\n\n    // Función para buscar estudiantes en Firestore\n    const handleSearch = async (e) => {\n        e.preventDefault();\n\n        const studentsRef = collection(db, \"estudiantes\");\n        const filters = [];\n        if (searchQuery.nombre) filters.push(where(\"nombre\", \"==\", searchQuery.nombre));\n        if (searchQuery.edad) filters.push(where(\"edad\", \"==\", parseInt(searchQuery.edad)));\n        if (searchQuery.curso) filters.push(where(\"curso\", \"==\", searchQuery.curso));\n        if (searchQuery.estadoMatricula)\n            filters.push(where(\"estadoMatricula\", \"==\", searchQuery.estadoMatricula));\n\n        try {\n            const q = query(studentsRef, ...filters);\n            const querySnapshot = await getDocs(q);\n\n            if (querySnapshot.empty) {\n                setFilteredStudents([]);\n                alert(\"No se encontraron estudiantes con esos criterios.\");\n            } else {\n                const students = querySnapshot.docs.map((doc) => ({\n                    id: doc.id,\n                    ...doc.data(),\n                }));\n                setFilteredStudents(students);\n            }\n        } catch (error) {\n            console.error(\"Error al buscar estudiantes:\", error);\n            alert(\"Ocurrió un error durante la búsqueda.\");\n        }\n    };\n\n    return (\n        <div className=\"admin-container\">\n            <h1>Panel de Administración</h1>\n            <button className=\"logout-button\" onClick={onLogout}>\n                Cerrar Sesión\n            </button>\n\n            {/* Formulario para agregar estudiante */}\n            <div className=\"add-section\">\n                <h2>Agregar Estudiante</h2>\n                <form onSubmit={handleAddStudent}>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"nombre\">Nombre:</label>\n                        <input\n                            type=\"text\"\n                            id=\"nombre\"\n                            name=\"nombre\"\n                            value={formData.nombre}\n                            onChange={handleChange}\n                            required\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"edad\">Edad:</label>\n                        <input\n                            type=\"number\"\n                            id=\"edad\"\n                            name=\"edad\"\n                            value={formData.edad}\n                            onChange={handleChange}\n                            required\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"curso\">Curso:</label>\n                        <input\n                            type=\"text\"\n                            id=\"curso\"\n                            name=\"curso\"\n                            value={formData.curso}\n                            onChange={handleChange}\n                            required\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"estadoMatricula\">Estado Matrícula:</label>\n                        <select\n                            id=\"estadoMatricula\"\n                            name=\"estadoMatricula\"\n                            value={formData.estadoMatricula}\n                            onChange={handleChange}\n                            required\n                        >\n                            <option value=\"Activa\">Activa</option>\n                            <option value=\"Inactiva\">Inactiva</option>\n                        </select>\n                    </div>\n                    <button type=\"submit\" className=\"add-button\">\n                        Agregar Estudiante\n                    </button>\n                </form>\n            </div>\n\n            {/* Formulario de búsqueda */}\n            <div className=\"search-section\">\n                <h2>Filtrar Estudiantes</h2>\n                <form onSubmit={handleSearch}>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"nombre\">Nombre:</label>\n                        <input\n                            type=\"text\"\n                            id=\"nombre\"\n                            name=\"nombre\"\n                            value={searchQuery.nombre}\n                            onChange={handleSearchChange}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"edad\">Edad:</label>\n                        <input\n                            type=\"number\"\n                            id=\"edad\"\n                            name=\"edad\"\n                            value={searchQuery.edad}\n                            onChange={handleSearchChange}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"curso\">Curso:</label>\n                        <input\n                            type=\"text\"\n                            id=\"curso\"\n                            name=\"curso\"\n                            value={searchQuery.curso}\n                            onChange={handleSearchChange}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"estadoMatricula\">Estado Matrícula:</label>\n                        <select\n                            id=\"estadoMatricula\"\n                            name=\"estadoMatricula\"\n                            value={searchQuery.estadoMatricula}\n                            onChange={handleSearchChange}\n                        >\n                            <option value=\"\">Seleccione un estado</option>\n                            <option value=\"Activa\">Activa</option>\n                            <option value=\"Inactiva\">Inactiva</option>\n                        </select>\n                    </div>\n                    <button type=\"submit\" className=\"search-button\">\n                        Buscar\n                    </button>\n                </form>\n            </div>\n\n            {/* Resultados de la búsqueda */}\n            <div className=\"results-section\">\n                <h2>Resultados</h2>\n                {filteredStudents.length > 0 ? (\n                    <ul>\n                        {filteredStudents.map((student) => (\n                            <li key={student.id}>\n                                <strong>Nombre:</strong> {student.nombre} |{\" \"}\n                                <strong>Edad:</strong> {student.edad} |{\" \"}\n                                <strong>Curso:</strong> {student.curso} |{\" \"}\n                                <strong>Estado Matrícula:</strong> {student.estadoMatricula}\n                            </li>\n                        ))}\n                    </ul>\n                ) : (\n                    <p>No hay resultados para mostrar.</p>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default AdminDashboard;","import React from \"react\";\nimport \"./AdminDashboard.css\"; // Reutilizamos los estilos del AdminDashboard\n\nconst ApoderadoDashboard = ({ apoderado, onNavigateBack, onLogout }) => {\n    return (\n        <div className=\"admin-container\">\n            <h1>Panel del Apoderado</h1>\n            <button className=\"logout-button\" onClick={onLogout}>\n                Cerrar Sesión\n            </button>\n\n            {/* Información del Apoderado */}\n            <div className=\"student-info-section\">\n                <h2>Información del Apoderado</h2>\n                <div className=\"info-group\">\n                    <strong>Nombre:</strong> {apoderado.nombre}\n                </div>\n                <div className=\"info-group\">\n                    <strong>Teléfono:</strong> {apoderado.telefono}\n                </div>\n                <div className=\"info-group\">\n                    <strong>Dirección:</strong> {apoderado.direccion}\n                </div>\n            </div>\n\n            {/* Lista de Estudiantes Asociados */}\n            <div className=\"students-section\">\n                <h2>Estudiantes Asociados</h2>\n                {apoderado.estudiantes.length > 0 ? (\n                    <ul>\n                        {apoderado.estudiantes.map((estudiante) => (\n                            <li key={estudiante.id}>\n                                <strong>Nombre:</strong> {estudiante.nombre} |{\" \"}\n                                <strong>Curso:</strong> {estudiante.curso} |{\" \"}\n                                <strong>Estado Matrícula:</strong>{\" \"}\n                                {estudiante.estadoMatricula}\n                            </li>\n                        ))}\n                    </ul>\n                ) : (\n                    <p>No hay estudiantes asociados.</p>\n                )}\n            </div>\n\n            {/* Botón para volver al Panel del Estudiante */}\n            <button className=\"navigate-button\" onClick={onNavigateBack}>\n                Volver al Panel del Estudiante\n            </button>\n        </div>\n    );\n};\n\nexport default ApoderadoDashboard;","import React from \"react\";\nimport \"./EstudianteDashboard.css\"; // Reutilizamos los estilos del AdminDashboard\n\nconst EstudianteDashboard = ({ estudiante, onNavigateToApoderado, onNavigateToMatricula, onLogout }) => {\n    return (\n        <div className=\"admin-container\">\n            <h1>Panel del Estudiante</h1>\n            <button className=\"logout-button\" onClick={onLogout}>\n                Cerrar Sesión\n            </button>\n\n            {/* Información del Estudiante */}\n            <div className=\"student-info-section\">\n                <h2>Información del Estudiante</h2>\n                <div className=\"info-group\">\n                    <strong>Nombre:</strong> {estudiante.nombre}\n                </div>\n                <div className=\"info-group\">\n                    <strong>Edad:</strong> {estudiante.edad}\n                </div>\n                <div className=\"info-group\">\n                    <strong>Curso:</strong> {estudiante.curso}\n                </div>\n                <div className=\"info-group\">\n                    <strong>Estado Matrícula:</strong> {estudiante.estadoMatricula}\n                </div>\n            </div>\n\n            {/* Botones para navegar a Apoderado y Matrícula */}\n            <div className=\"navigation-section\">\n                <button\n                    className=\"navigate-button\"\n                    onClick={onNavigateToApoderado}\n                >\n                    Ver Información del Apoderado\n                </button>\n                <button\n                    className=\"navigate-button\"\n                    onClick={onNavigateToMatricula}\n                >\n                    Ver Información de Matrícula\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default EstudianteDashboard;","import React, { useState } from \"react\";\nimport LoginScreen from \"./components/LoginScreen\";\nimport AdminDashboard from \"./components/AdminDashboard\";\nimport ApoderadoDashboard from \"./components/ApoderadoDashboard\";\nimport EstudianteDashboard from \"./components/EstudianteDashboard\";\n\nconst App = () => {\n    const [userRole, setUserRole] = useState(null); // Estado para almacenar el rol del usuario\n    const [isLoggedIn, setIsLoggedIn] = useState(false); // Estado para verificar si el usuario está autenticado\n    const [currentView, setCurrentView] = useState(\"default\"); // Estado para manejar la navegación entre vistas\n\n    // Datos simulados del estudiante y apoderado\n    const estudianteData = {\n        nombre: \"Juan Pérez\",\n        edad: 16,\n        curso: \"10mo\",\n        estadoMatricula: \"Activa\",\n    };\n\n    const apoderadoData = {\n        nombre: \"María López\",\n        telefono: \"123456789\",\n        direccion: \"Calle 123, Ciudad\",\n        estudiantes: [\n            {\n                id: \"estudiante_1\",\n                nombre: \"Juan Pérez\",\n                curso: \"10mo\",\n                estadoMatricula: \"Activa\",\n            },\n        ],\n    };\n\n    // Manejo de inicio de sesión\n    const handleLogin = (role) => {\n        setUserRole(role); // Asigna el rol del usuario\n        setIsLoggedIn(true); // Marca al usuario como autenticado\n        setCurrentView(\"default\"); // Restablece la vista predeterminada al iniciar sesión\n    };\n\n    // Manejo de cierre de sesión\n    const handleLogout = () => {\n        setUserRole(null); // Limpia el rol del usuario\n        setIsLoggedIn(false); // Marca al usuario como no autenticado\n        setCurrentView(\"default\"); // Restablece la vista predeterminada\n    };\n\n    // Función para navegar a la información del apoderado\n    const handleNavigateToApoderado = () => {\n        setCurrentView(\"apoderado\");\n    };\n\n    // Función para navegar a la información de la matrícula\n    const handleNavigateToMatricula = () => {\n        setCurrentView(\"matricula\");\n    };\n\n    return (\n        <div>\n            {isLoggedIn ? (\n                <>\n                    {userRole === \"Administrador\" && (\n                        <AdminDashboard onLogout={handleLogout} />\n                    )}\n                    {userRole === \"Apoderado\" && (\n                        <ApoderadoDashboard\n                            apoderado={apoderadoData}\n                            onLogout={handleLogout}\n                            onNavigateBack={() => setCurrentView(\"default\")}\n                        />\n                    )}\n                    {userRole === \"Estudiante\" && (\n                        <>\n                            {currentView === \"default\" && (\n                                <EstudianteDashboard\n                                    estudiante={estudianteData}\n                                    onNavigateToApoderado={handleNavigateToApoderado}\n                                    onNavigateToMatricula={handleNavigateToMatricula}\n                                    onLogout={handleLogout}\n                                />\n                            )}\n                            {currentView === \"apoderado\" && (\n                                <ApoderadoDashboard\n                                    apoderado={apoderadoData}\n                                    onLogout={handleLogout}\n                                    onNavigateBack={() => setCurrentView(\"default\")}\n                                />\n                            )}\n                            {currentView === \"matricula\" && (\n                                <div className=\"admin-container\">\n                                    <h1>Información de Matrícula</h1>\n                                    <div className=\"info-group\">\n                                        <strong>Nombre:</strong> {estudianteData.nombre}\n                                    </div>\n                                    <div className=\"info-group\">\n                                        <strong>Curso:</strong> {estudianteData.curso}\n                                    </div>\n                                    <div className=\"info-group\">\n                                        <strong>Estado Matrícula:</strong>{\" \"}\n                                        {estudianteData.estadoMatricula}\n                                    </div>\n                                    <button\n                                        className=\"navigate-button\"\n                                        onClick={() => setCurrentView(\"default\")}\n                                    >\n                                        Volver al Panel del Estudiante\n                                    </button>\n                                </div>\n                            )}\n                        </>\n                    )}\n                </>\n            ) : (\n                <LoginScreen onLogin={handleLogin} />\n            )}\n        </div>\n    );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}